{"ast":null,"code":"var _jsxFileName = \"/home/olimpio/Documentos/ImageMongoDB/Frontend/src/App.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 200\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [image, setImage] = React.useState('');\n  const [user, setUser] = React.useState('');\n  const [userFind, setUserFind] = React.useState('');\n\n  const fetchImage = async () => await axios.get('http://localhost:3000/getLatest').then(result => setUserFind(result.data));\n\n  React.useEffect(fetchImage, []);\n\n  const getBase64 = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => {\n      setUser({ ...user,\n        imgUrl1: reader.result.toString(),\n        imgUrl2: reader.result.toString(),\n        imgUrl3: reader.result.toString()\n      });\n    };\n\n    reader.onerror = error => {\n      console.log('Error: ', error);\n    };\n  };\n\n  const onChange = async event => {\n    getBase64(event.target.files[0]);\n    setImage(URL.createObjectURL(event.target.files[0]));\n  };\n\n  const onSubmit = async () => {\n    setUser({ ...user,\n      name: 'teste',\n      extensao: 'png'\n    });\n    await axios.post('http://localhost:3000/upload', {\n      user\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    width: \"400\",\n    alt: \"Imagem buscada pelo usu\\xE1rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    id: \"contained-button-file\" // multiple\n    ,\n    type: \"file\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \" Upload\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, userFind ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }\n  }, \"Imagens carregadas do MongoDB\") : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }\n  }, \"Envie uma imagem\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, userFind ? /*#__PURE__*/React.createElement(\"img\", {\n    src: userFind.imgUrl1,\n    width: \"250\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }\n  }) : 'Imagem 1')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, userFind ? /*#__PURE__*/React.createElement(\"img\", {\n    src: userFind.imgUrl2,\n    width: \"250\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }\n  }) : 'Imagem 2')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, userFind ? /*#__PURE__*/React.createElement(\"img\", {\n    src: userFind.imgUrl3,\n    width: \"250\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 24\n    }\n  }) : 'Imagem 3'))));\n}\n\nexport default App;\n/*\n\n\n<div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          Learn React\n        </a>\n        <div className={classes.root}>\n          <br />\n          <input\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            // multiple\n            type=\"file\"\n            onChange={onChange}\n          />\n          <Button onClick={onSubmit} variant=\"contained\" color=\"primary\" component=\"span\"> Upload</Button>\n\n          <br />\n          <img src={image} width=\"250\" alt=\"\" />\n\n          {userFind ? (<>\n            <img src={userFind.imgUrl1} width=\"250\" alt=\"\" />\n            <img src={userFind.imgUrl2} width=\"250\" alt=\"\" />\n            <img src={userFind.imgUrl3} width=\"250\" alt=\"\" /></>) : null}\n        </div>\n      </header>\n    </div>\n*/","map":{"version":3,"sources":["/home/olimpio/Documentos/ImageMongoDB/Frontend/src/App.js"],"names":["React","makeStyles","Paper","Grid","Typography","Button","axios","useStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","textAlign","color","palette","text","secondary","App","classes","image","setImage","useState","user","setUser","userFind","setUserFind","fetchImage","get","then","result","data","useEffect","getBase64","file","reader","FileReader","readAsDataURL","onload","imgUrl1","toString","imgUrl2","imgUrl3","onerror","error","console","log","onChange","event","target","files","URL","createObjectURL","onSubmit","name","extensao","post"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 200\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [image, setImage] = React.useState('');\n  const [user, setUser] = React.useState('');\n  const [userFind, setUserFind] = React.useState('');\n\n  const fetchImage = async () => await axios.get('http://localhost:3000/getLatest').then(result => setUserFind(result.data));\n\n  React.useEffect(fetchImage, []);\n\n  const getBase64 = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      setUser({\n        ...user,\n        imgUrl1: reader.result.toString(),\n        imgUrl2: reader.result.toString(),\n        imgUrl3: reader.result.toString()\n      });\n    };\n\n    reader.onerror = (error) => {\n      console.log('Error: ', error);\n    };\n  }\n\n  const onChange = async (event) => {\n    getBase64(event.target.files[0]);\n    setImage(URL.createObjectURL(event.target.files[0]));\n  }\n\n\n  const onSubmit = async () => {\n    setUser({ ...user, name: 'teste', extensao: 'png' });\n    await axios.post('http://localhost:3000/upload', { user });\n  };\n\n  return (<div className={classes.root}>\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\n      <Grid item xs={10}>\n        <Paper className={classes.paper}>\n          <img src={image} width=\"400\" alt=\"Imagem buscada pelo usuário\" />\n        </Paper>\n      </Grid>\n      <Grid item xs={10}>\n        <Paper className={classes.paper}>\n          <input\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            // multiple\n            type=\"file\"\n            onChange={onChange}\n          />\n          <Button onClick={onSubmit} variant=\"contained\" color=\"primary\" component=\"span\"> Upload</Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={10}>\n        <Paper className={classes.paper}>\n          {userFind ?\n            (<Typography variant=\"h4\" gutterBottom>\n              Imagens carregadas do MongoDB\n            </Typography>)\n            : (<Typography variant=\"h4\" gutterBottom>\n              Envie uma imagem\n            </Typography>)}\n        </Paper>\n      </Grid>\n\n      <Grid item xs={3}>\n        <Paper className={classes.paper}>\n          {userFind ? (<img src={userFind.imgUrl1} width=\"250\" alt=\"\" />) : 'Imagem 1'}\n        </Paper>\n      </Grid>\n      <Grid item xs={3}>\n        <Paper className={classes.paper}>\n          {userFind ? (<img src={userFind.imgUrl2} width=\"250\" alt=\"\" />) : 'Imagem 2'}\n        </Paper>\n      </Grid>\n      <Grid item xs={3}>\n        <Paper className={classes.paper}>\n          {userFind ? (<img src={userFind.imgUrl3} width=\"250\" alt=\"\" />) : 'Imagem 3'}\n        </Paper>\n      </Grid>\n    </Grid>\n  </div>);\n}\n\nexport default App;\n/*\n\n\n<div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          Learn React\n        </a>\n        <div className={classes.root}>\n          <br />\n          <input\n            accept=\"image/*\"\n            id=\"contained-button-file\"\n            // multiple\n            type=\"file\"\n            onChange={onChange}\n          />\n          <Button onClick={onSubmit} variant=\"contained\" color=\"primary\" component=\"span\"> Upload</Button>\n\n          <br />\n          <img src={image} width=\"250\" alt=\"\" />\n\n          {userFind ? (<>\n            <img src={userFind.imgUrl1} width=\"250\" alt=\"\" />\n            <img src={userFind.imgUrl2} width=\"250\" alt=\"\" />\n            <img src={userFind.imgUrl3} width=\"250\" alt=\"\" /></>) : null}\n        </div>\n      </header>\n    </div>\n*/"]},"metadata":{},"sourceType":"module"}